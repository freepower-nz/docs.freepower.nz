"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[831],{96064:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>h,contentTitle:()=>b,default:()=>P,frontMatter:()=>g,metadata:()=>t,toc:()=>C});const t=JSON.parse('{"id":"find-icp-by-address","title":"FindIcpByAddress","description":"Attempts to find ICPs for a given address. If the address is vague, returns a list of address suggestions without ICPs. When a single address is confirmed, returns one or more ICPs matched to it. Use this before calling estimation or recommendation actions.","source":"@site/docs/find-icp-by-address.api.mdx","sourceDirName":".","slug":"/find-icp-by-address","permalink":"/find-icp-by-address","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"find-icp-by-address","title":"FindIcpByAddress","description":"Attempts to find ICPs for a given address. If the address is vague, returns a list of address suggestions without ICPs. When a single address is confirmed, returns one or more ICPs matched to it. Use this before calling estimation or recommendation actions.","sidebar_label":"FindIcpByAddress","hide_title":true,"hide_table_of_contents":true,"api":"eJztVcuO2zYU/RWCqxaQ5ZkgK+88SVMYARIjnaBAZ2ZBS1cyMxTJkJRnVMP/3nNFPydFkABd1gs/6Ps4vOecq61Mqo1ydiffBSLvniiUc6/lQyFrilXQPmln5UzOU6LOpyiSE422tVi8WUbRuCCUaPWGrFB1HSjGUiwakdZ0+C10FBvV9lSIQKkPNiLD6JiEa44xsW9bitwqiied1q5PY4NS/Lnm0iJq25qLmpWzjQ4d1ae6zpIAoM4FyvA6lao11YxZp1J8jgRkyF1RwzGVMgZ1BXdGKLpzeqDKdR3ZOp+oaoRVykI6T2E8XNSYyDtMYVH5m2GeQSEg0NcexW5cPcjZVgJiIpv4q/Le6GpMnn6JPNGtjMDWKf6WBk+o6FZfqEqo4wO3SprimLuvfwqMKQC3fMnRLabegMYJbtfxVbxCEWVOY7Meg22C60aG+gi27+0tj+RJG4O5HEfW88SPiapPDlPxhhJIyOxjUC1oDIMwzj32vpS7XcFgNcNRZnl2iUaZSC/hfsrTAsrBOFVfKmulIlDw/O0lfCYi6WToRMG+EPrvMgc6EBhKoafxIHoQmGf56uqKPy6BfHyPmj9LlgpBDcjT8EX8r0kEfwqGq49X/4XKtizEvXwt3qvgxNKoCo763UCnZOle/orxA0zlWZs/0oMZXLyFE+1jdsjojH2/QmiYc6O0UStDcOFeHbbHJ/6yLomBEiQQndlQzaTwfxy9H/zPaWH+L3d2Pieb4Qwl5JCRn+sAGjiYcDe+Cvk8MaabNEFjQGbImApJz+A4sp+x8rbykfDPy9BCbpTpD9fAIuwIC4kd710ciVVpjV9T5fV0vx2mm+spa3cCAhABX20o5B59MAhep+TjbDqFXcrmuGnt31PJHVhkn06747dnxVa7kM2BSibZNm7k+OCCQz0xXy6+4Rpn45rOEd5ggGf7jr3MxlZBAwMcJj78xZNl+Dn/qrwur7kt375Toxms6g72E5i9uBnEaQletD9bgv8/Qlix2ZcJQpyCC215sqNEtntd3WH9aETuk5iLa7wd1QW5rFmHCNxueUt+Dma342PoJ0DPdw+s4KCzF+8e0GBNqqZwJvk3mZTJLcM5Cv7bxbcrDhnzqiKfvht7bpXlxz9uEbzaPwk7V3NOUE/8lMT7TI7P03xFBIxnWwl1tr1qOTbX5Nc/ZiwDsg==","sidebar_class_name":"post api-method","info_path":"docs//freepower-api","custom_edit_url":null},"sidebar":"api","previous":{"title":"AddressSearch","permalink":"/address-search"},"next":{"title":"FindIcpForGivenAddress","permalink":"/find-icp-for-given-address"}}');var d=i(74848),n=i(28453),a=i(33617),r=i.n(a),o=i(17543),p=i.n(o),c=i(86013),l=i.n(c),f=i(63723),m=i.n(f),u=(i(18766),i(79329),i(9303));const g={id:"find-icp-by-address",title:"FindIcpByAddress",description:"Attempts to find ICPs for a given address. If the address is vague, returns a list of address suggestions without ICPs. When a single address is confirmed, returns one or more ICPs matched to it. Use this before calling estimation or recommendation actions.",sidebar_label:"FindIcpByAddress",hide_title:!0,hide_table_of_contents:!0,api:"eJztVcuO2zYU/RWCqxaQ5ZkgK+88SVMYARIjnaBAZ2ZBS1cyMxTJkJRnVMP/3nNFPydFkABd1gs/6Ps4vOecq61Mqo1ydiffBSLvniiUc6/lQyFrilXQPmln5UzOU6LOpyiSE422tVi8WUbRuCCUaPWGrFB1HSjGUiwakdZ0+C10FBvV9lSIQKkPNiLD6JiEa44xsW9bitwqiied1q5PY4NS/Lnm0iJq25qLmpWzjQ4d1ae6zpIAoM4FyvA6lao11YxZp1J8jgRkyF1RwzGVMgZ1BXdGKLpzeqDKdR3ZOp+oaoRVykI6T2E8XNSYyDtMYVH5m2GeQSEg0NcexW5cPcjZVgJiIpv4q/Le6GpMnn6JPNGtjMDWKf6WBk+o6FZfqEqo4wO3SprimLuvfwqMKQC3fMnRLabegMYJbtfxVbxCEWVOY7Meg22C60aG+gi27+0tj+RJG4O5HEfW88SPiapPDlPxhhJIyOxjUC1oDIMwzj32vpS7XcFgNcNRZnl2iUaZSC/hfsrTAsrBOFVfKmulIlDw/O0lfCYi6WToRMG+EPrvMgc6EBhKoafxIHoQmGf56uqKPy6BfHyPmj9LlgpBDcjT8EX8r0kEfwqGq49X/4XKtizEvXwt3qvgxNKoCo763UCnZOle/orxA0zlWZs/0oMZXLyFE+1jdsjojH2/QmiYc6O0UStDcOFeHbbHJ/6yLomBEiQQndlQzaTwfxy9H/zPaWH+L3d2Pieb4Qwl5JCRn+sAGjiYcDe+Cvk8MaabNEFjQGbImApJz+A4sp+x8rbykfDPy9BCbpTpD9fAIuwIC4kd710ciVVpjV9T5fV0vx2mm+spa3cCAhABX20o5B59MAhep+TjbDqFXcrmuGnt31PJHVhkn06747dnxVa7kM2BSibZNm7k+OCCQz0xXy6+4Rpn45rOEd5ggGf7jr3MxlZBAwMcJj78xZNl+Dn/qrwur7kt375Toxms6g72E5i9uBnEaQletD9bgv8/Qlix2ZcJQpyCC215sqNEtntd3WH9aETuk5iLa7wd1QW5rFmHCNxueUt+Dma342PoJ0DPdw+s4KCzF+8e0GBNqqZwJvk3mZTJLcM5Cv7bxbcrDhnzqiKfvht7bpXlxz9uEbzaPwk7V3NOUE/8lMT7TI7P03xFBIxnWwl1tr1qOTbX5Nc/ZiwDsg==",sidebar_class_name:"post api-method",info_path:"docs//freepower-api",custom_edit_url:null},b=void 0,h={},C=[];function x(e){const s={p:"p",...(0,n.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(u.default,{as:"h1",className:"openapi__heading",children:"FindIcpByAddress"}),"\n",(0,d.jsx)(r(),{method:"post",path:"/api/actions/v1/find-icp",context:"endpoint"}),"\n",(0,d.jsx)(s.p,{children:"Attempts to find ICPs for a given address. If the address is vague, returns a list of address suggestions without ICPs. When a single address is confirmed, returns one or more ICPs matched to it. Use this before calling estimation or recommendation actions."}),"\n",(0,d.jsx)(u.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,d.jsx)(p(),{parameters:void 0}),"\n",(0,d.jsx)(l(),{title:"Body",body:{content:{"application/json":{schema:{type:"object",properties:{address:{type:"string",description:"The free-form or partial address input from the user.\nThis will be matched using address autocomplete and ICP registry lookup."}},additionalProperties:!1,description:"Request payload to find ICPs based on an address input.",title:"FindIcpRequest"}}},required:!0}}),"\n",(0,d.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{address:{type:"string",description:'The formatted address (e.g., "4 Karo Place, Glendene").'},icpId:{type:"string",description:"The ICP ID linked to this address, if available. Will be null if not yet resolved.",nullable:!0}},additionalProperties:!1,description:"A formatted address optionally linked to an ICP ID.",title:"IcpAddress"}}}}}}})]})}function P(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(x,{...e})}):x(e)}}}]);